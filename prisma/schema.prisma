// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProductFeedback {
  id           String    @id @default(uuid())
  title        String
  category     String
  updateStatus String    @map("update_status")
  detail       String    @db.Text
  comments     Comment[]
  likes        Like[]
  createdAt    DateTime  @default(now()) @map("created_at")
  createdBy    User      @relation(fields: [userId], references: [id])
  userId       String
  modifiedAt   DateTime  @default(now()) @map("modified_at")

  @@map("products_feedback")
}

model Like {
  id                String          @id @default(uuid())
  user              User            @relation(fields: [userId], references: [id])
  userId            String
  productFeedback   ProductFeedback @relation(fields: [productFeedbackId], references: [id])
  productFeedbackId String
  createdAt         DateTime        @default(now()) @map("created_at")
  modifiedAt        DateTime        @default(now()) @map("modified_at")

  @@unique([userId, productFeedbackId], map: "user_id_product_feedback_id_unique")
  @@map("likes")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  username  String    @unique
  password  String
  name      String
  surname   String
  comments  Comment[]
  createdAt DateTime  @default(now()) @map("created_at")

  ProductFeedback ProductFeedback[]
  Like            Like[]

  @@map("users")
}

model Comment {
  id         String   @id @default(uuid())
  comment    String   @db.Text
  createdAt  DateTime @default(now()) @map("created_at")
  modifiedAt DateTime @default(now()) @map("modified_at")

  User   User   @relation(fields: [userId], references: [id])
  userId String

  ProductFeedback   ProductFeedback? @relation(fields: [productFeedbackId], references: [id])
  productFeedbackId String?

  @@map("comments")
}
